<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="categoryCPU" xml:space="preserve">
    <value>Processor</value>
  </data>
  <data name="categoryGPU" xml:space="preserve">
    <value>Graphics Cards</value>
  </data>
  <data name="categoryMB" xml:space="preserve">
    <value>Motherboard</value>
  </data>
  <data name="categoryPSU" xml:space="preserve">
    <value>Power supply block</value>
  </data>
  <data name="categoryRAM" xml:space="preserve">
    <value>RAM memory</value>
  </data>
  <data name="categoryStorage" xml:space="preserve">
    <value>Storage</value>
  </data>
  <data name="category" xml:space="preserve">
    <value>Category:</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="homeCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="homeRecommended" xml:space="preserve">
    <value>Recommended</value>
  </data>
  <data name="tabDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="tabSpecifications" xml:space="preserve">
    <value>Specifications</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Quantity:</value>
  </data>
  <data name="addToCart" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="backTo" xml:space="preserve">
    <value>Back to </value>
  </data>
  <data name="open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="moreDetail" xml:space="preserve">
    <value>More details</value>
  </data>
  <data name="noProduct" xml:space="preserve">
    <value>No products available in this category.</value>
  </data>
  <data name="cart" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total:</value>
  </data>
  <data name="noCart" xml:space="preserve">
    <value>Your cart is empty</value>
  </data>
  <data name="payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="authReq" xml:space="preserve">
    <value>Auth required</value>
  </data>
  <data name="productCategories" xml:space="preserve">
    <value>Product categories</value>
  </data>
  <data name="orderSummary" xml:space="preserve">
    <value>Order Summary</value>
  </data>
  <data name="withoutPVM" xml:space="preserve">
    <value>Price without PVM:</value>
  </data>
  <data name="payNow" xml:space="preserve">
    <value>Pay now</value>
  </data>
  <data name="shippingAddress" xml:space="preserve">
    <value>Shipping Address</value>
  </data>
  <data name="firstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="lastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="streetAddress" xml:space="preserve">
    <value>Street address</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="zipCode" xml:space="preserve">
    <value>ZIP code</value>
  </data>
  <data name="country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="cardNumber" xml:space="preserve">
    <value>Card number</value>
  </data>
  <data name="english" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="lithuanian" xml:space="preserve">
    <value>Lithuanian</value>
  </data>
  <data name="paymentDetails" xml:space="preserve">
    <value>Payment details</value>
  </data>
  <data name="price" xml:space="preserve">
    <value>Price:</value>
  </data>
  <data name="noFavorite" xml:space="preserve">
    <value>There's no favorite products selected</value>
  </data>
  <data name="profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="favorites" xml:space="preserve">
    <value>Favorite products</value>
  </data>
  <data name="purchaseHistory" xml:space="preserve">
    <value>Purchase history</value>
  </data>
  <data name="purchaseDate" xml:space="preserve">
    <value>Purchase date:</value>
  </data>
  <data name="itemsPurchased" xml:space="preserve">
    <value>Purchased items</value>
  </data>
  <data name="totalPrice" xml:space="preserve">
    <value>Total price:</value>
  </data>
  <data name="actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="noPurchase" xml:space="preserve">
    <value>There's no purchases made</value>
  </data>
  <data name="loadingCategory" xml:space="preserve">
    <value>Loading category...</value>
  </data>
  <data name="editing" xml:space="preserve">
    <value>editing</value>
  </data>
  <data name="category2" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="changeName" xml:space="preserve">
    <value>Change name:</value>
  </data>
  <data name="changeTitle" xml:space="preserve">
    <value>Change title:</value>
  </data>
  <data name="changeDescription" xml:space="preserve">
    <value>Change description:</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="uploadFile" xml:space="preserve">
    <value>Upload file</value>
  </data>
  <data name="fileUploaded" xml:space="preserve">
    <value>File(s) uploaded:</value>
  </data>
  <data name="uploadAgain" xml:space="preserve">
    <value>"Upload Again to Replace Image"</value>
  </data>
  <data name="categoryCreation" xml:space="preserve">
    <value>Category creation</value>
  </data>
  <data name="categoryName" xml:space="preserve">
    <value>Category name:</value>
  </data>
  <data name="categoryTitle" xml:space="preserve">
    <value>Category title:</value>
  </data>
  <data name="categoryDescription" xml:space="preserve">
    <value>Category description:</value>
  </data>
  <data name="adminMenu" xml:space="preserve">
    <value>Admin menu</value>
  </data>
  <data name="productCreate" xml:space="preserve">
    <value>Create product</value>
  </data>
  <data name="changeType" xml:space="preserve">
    <value>Change type:</value>
  </data>
  <data name="productType" xml:space="preserve">
    <value>Product type:</value>
  </data>
  <data name="productName" xml:space="preserve">
    <value>Product name:</value>
  </data>
  <data name="selectCategories" xml:space="preserve">
    <value>Select categories</value>
  </data>
  <data name="productPrice" xml:space="preserve">
    <value>Product price:</value>
  </data>
  <data name="deleteImage" xml:space="preserve">
    <value>Detele Image</value>
  </data>
  <data name="productDescription" xml:space="preserve">
    <value>Product description:</value>
  </data>
  <data name="selectImgThumbnail" xml:space="preserve">
    <value>Select which image will be a thumbnail</value>
  </data>
  <data name="makeSelection" xml:space="preserve">
    <value>Make a selection...</value>
  </data>
  <data name="selectNewOldThumbnail" xml:space="preserve">
    <value>Select New/Old thumbnail image:</value>
  </data>
  <data name="selectCategory" xml:space="preserve">
    <value>Select category:</value>
  </data>
  <data name="loadingProduct" xml:space="preserve">
    <value>Loading product...</value>
  </data>
  <data name="product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="changePrice" xml:space="preserve">
    <value>Change price:</value>
  </data>
  <data name="userCreate" xml:space="preserve">
    <value>Create user</value>
  </data>
  <data name="userName" xml:space="preserve">
    <value>User name:</value>
  </data>
  <data name="userEmail" xml:space="preserve">
    <value>User email:</value>
  </data>
  <data name="loadingUser" xml:space="preserve">
    <value>Loading user...</value>
  </data>
  <data name="user" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="changeUsername" xml:space="preserve">
    <value>Change username:</value>
  </data>
  <data name="changeEmail" xml:space="preserve">
    <value>Change email:</value>
  </data>
  <data name="product2" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="createNew" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="user2" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="message" xml:space="preserve">
    <value>Are you &lt;strong&gt;sure&lt;/strong&gt; you want to delete this item? &lt;br /&gt;&lt;br /&gt;This will also remove any linked items</value>
  </data>
</root>