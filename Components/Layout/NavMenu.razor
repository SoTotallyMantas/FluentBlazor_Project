@rendermode InteractiveServer

@implements IDisposable

@inject ICategoryService _categoryService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Resource> Localizer

<div class="navmenu">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon" />
    <label for="navmenu-toggle" class="navmenu-icon"><FluentIcon Value="@(new Icons.Regular.Size20.Navigation())" Color="Color.Fill" /></label>
    <nav class="sitenav" aria-labelledby="main-menu">
        <FluentNavMenu Id="main-menu" Collapsible="true" Width="250" Title="Navigation menu" @bind-Expanded="expanded" CustomToggle="true">
            <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Home())" IconColor="Color.Accent">@Localizer["home"]</FluentNavLink>
            @*Product Categories with Links to products*@
            <FluentNavGroup Title="@Localizer["productCategories"]" Tooltip="@Localizer["productCategories"]" Icon="@(new Icons.Regular.Size20.List())">
                @foreach (Category category in categoriesDB)
                {
                    <FluentNavLink Href="@($"Product/{category.CategoryName}")">@category.Title</FluentNavLink>
                }
            </FluentNavGroup>

            <AuthorizeView Roles="user">
                <FluentNavLink Href="profile" Icon="@(new Icons.Regular.Size20.Person())" IconColor="Color.Accent">@Localizer["profile"]</FluentNavLink>
            </AuthorizeView>

            <AuthorizeView Roles="administrator">
                <FluentNavLink Href="/admin">@Localizer["adminMenu"]</FluentNavLink>
            </AuthorizeView>

            <AuthorizeView>
                
                <Authorized>
                    <FluentNavLink Href="Account/Manage">@context.User.Identity?.Name</FluentNavLink>
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <FluentButton Type="ButtonType.Submit" Style="width: 100%;">@Localizer["logout"]</FluentButton>
                    </form>
                </Authorized>
                
                <NotAuthorized>
                    <FluentNavLink Href="Account/Register">@Localizer["register"]</FluentNavLink>
                    <FluentNavLink Href="Account/Login">@Localizer["login"]</FluentNavLink>
                </NotAuthorized>
            </AuthorizeView>

        </FluentNavMenu>
    </nav>
</div>

@code {
    private bool expanded = true;
    private string? currentUrl;

    List<Category> categoriesDB = new();
    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        categoriesDB = await _categoryService.GetCategoriesAsync();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
