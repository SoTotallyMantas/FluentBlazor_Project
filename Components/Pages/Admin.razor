@page "/admin"
@inject NavigationManager Navigation
@inject IProductService _productService
@inject ICategoryService _categoryService
@using FluentBlazor_Project.Data.Models
@using FluentBlazor_Project.Interface
@using System.ComponentModel.DataAnnotations
@using Microsoft.FluentUI.AspNetCore.Components.DataGrid

@rendermode InteractiveServer

<h2>Admin</h2>
<FluentTabs style="margin-top: 5px;">
    <FluentTab id="productTab" label="Product">
        <FluentDataGrid Items="@products.AsQueryable()" Pagination="@productPagination" MultiLine="true">
            <PropertyColumn Property="@(p => p.Name)" Title="Product Name" Sortable="true" />
            <PropertyColumn Property="@(p => p.Type)" Title="Type" Sortable="true" />

            <TemplateColumn Title="Actions">
                <FluentButton Style="width: 60px; height: 40px;"
                Appearance="Appearance.Accent"
                IconEnd="@(new Icons.Regular.Size20.Pen())"
                Title="Edit"
                @onclick="@(() => EditProduct(context.Id))" />

                <FluentButton Style="width: 60px; height: 40px;"
                Appearance="Appearance.Accent"
                IconEnd="@(new Icons.Regular.Size20.BinRecycle())"
                Title="Delete" />
            </TemplateColumn>
        </FluentDataGrid>
        <FluentPaginator State="@productPagination" />
    </FluentTab>
    <FluentTab id="categoryTab" label="Category">
        <FluentDataGrid Items="@categories.AsQueryable()" Pagination="@categoryPagination" MultiLine="true">
            <PropertyColumn Property="@(c => c.CategoryName)" Title="Name" Sortable="true" />
            <PropertyColumn Property="@(c => c.Title)" Title="Title" Sortable="true" />
            <PropertyColumn Property="@(c => c.Description)" Title="Description" Sortable="true" />
            <TemplateColumn Title="Actions">
                <FluentButton Style="width: 60px; height: 40px;"
                Appearance="Appearance.Accent"
                IconEnd="@(new Icons.Regular.Size20.Pen())"
                Title="Edit" 
                @onclick="@(() => EditCategory(context.Id))" />/>

                <FluentButton Style="width: 60px; height: 40px;"
                Appearance="Appearance.Accent"
                IconEnd="@(new Icons.Regular.Size20.BinRecycle())"
                Title="Delete" />
            </TemplateColumn>
        </FluentDataGrid>
        <FluentPaginator State="@categoryPagination" />
    </FluentTab>
</FluentTabs>

@code {
    PaginationState productPagination = new PaginationState() { ItemsPerPage = 12 };
    PaginationState categoryPagination = new PaginationState() { ItemsPerPage = 12 };

    private List<Product> products = new();
    private List<Category> categories = new();

    protected override async Task OnInitializedAsync()
    {
        products = await _productService.GetProductsAsync();
        categories = await _categoryService.GetCategoriesAsync();
    }

    private RenderFragment template = @<span />;

    private void EditProduct(Guid productId)
    {
        Navigation.NavigateTo($"/editProduct/{productId}");
    }

    private void EditCategory(Guid categoryId)
    {
        Navigation.NavigateTo($"/editCategory/{categoryId}");
    }
}

